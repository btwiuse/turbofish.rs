"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "unencumbered",  # CC0-1.0 from expression "CC0-1.0"
])

# Generated Targets

# Unsupported target "monitor_debounced" with type "example" omitted

# Unsupported target "monitor_raw" with type "example" omitted

rust_library(
    name = "notify",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2015",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "4.0.15",
    # buildifier: leave-alone
    deps = [
        "//cargo/vendor/bitflags-1.2.1:bitflags",
        "//cargo/vendor/filetime-0.2.13:filetime",
        "//cargo/vendor/libc-0.2.82:libc",
        "//cargo/vendor/walkdir-2.3.1:walkdir",
    ] + selects.with_or({
        # cfg(target_os = "linux")
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "//cargo/vendor/inotify-0.7.1:inotify",
            "//cargo/vendor/mio-0.6.23:mio",
            "//cargo/vendor/mio-extras-2.0.6:mio_extras",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(target_os = "macos")
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
        ): [
            "//cargo/vendor/fsevent-0.4.0:fsevent",
            "//cargo/vendor/fsevent-sys-2.0.1:fsevent_sys",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(windows)
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "//cargo/vendor/winapi-0.3.9:winapi",
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "debounce" with type "test" omitted

# Unsupported target "event_path" with type "test" omitted

# Unsupported target "fsevents" with type "test" omitted

# Unsupported target "notify" with type "test" omitted

# Unsupported target "watcher" with type "test" omitted

# Unsupported target "windows" with type "test" omitted
